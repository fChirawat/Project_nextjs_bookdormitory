import { NextResponse } from 'next/server';
import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient(); // ‚≠ê ‡∏™‡∏£‡πâ‡∏≤‡∏á Prisma Client ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß

// üè° GET ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏ö‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞ ID (/api/dormitories?id=xxx)
export async function GET(req: Request) {
  try {
    const { searchParams } = new URL(req.url);
    const id = searchParams.get('id'); // üîç ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ ID ‡∏à‡∏≤‡∏Å Query Params

    if (id) {
      // üü© ‡∏Å‡∏£‡∏ì‡∏µ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏≠‡∏û‡∏±‡∏Å‡πÅ‡∏ö‡∏ö‡πÄ‡∏à‡∏≤‡∏∞‡∏à‡∏á‡∏î‡πâ‡∏ß‡∏¢ ID
      const dormitory = await prisma.formSell.findUnique({
        where: { id: Number(id) }, // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å formSell
        select: {
          id: true,
          nameDormitory: true,
          typeDormitory: true,
          addressDormitory: true,
          dormitoryDetails: true,
          facilities: true,
          roomNumber: true,
          distanceDormitory: true,
          roomDeposit: true,
          priceMonth: true,
          priceElectricity: true,
          priceWater: true,
          priceWifi: true,
          priceOther: true,
          photoDormitory: true,
        },
      });

      if (!dormitory) {
        return NextResponse.json(
          { success: false, message: '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏≠‡∏û‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏' },
          { status: 404 }
        );
      }

      return NextResponse.json({ success: true, dormitory }, { status: 200 });
    } else {
      // üü¶ ‡∏Å‡∏£‡∏ì‡∏µ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏≠‡∏û‡∏±‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
      const dormitories = await prisma.formSell.findMany({
        select: {
          id: true,
          nameDormitory: true,
          typeDormitory: true,
          addressDormitory: true,
          dormitoryDetails: true,
          facilities: true,
          roomNumber: true,
          distanceDormitory: true,
          roomDeposit: true,
          priceMonth: true,
          priceElectricity: true,
          priceWater: true,
          priceWifi: true,
          priceOther: true,
          photoDormitory: true,
        },
      });

      if (!dormitories || dormitories.length === 0) {
        return NextResponse.json(
          { success: false, message: '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏≠‡∏û‡∏±‡∏Å' },
          { status: 404 }
        );
      }

      return NextResponse.json({ success: true, dormitories }, { status: 200 });
    }
  } catch (error) {
    console.error('‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', error);
    return NextResponse.json(
      { success: false, message: 'üö® ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå' },
      { status: 500 }
    );
  }
}
