datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  email    String   @unique
  phone    String   @unique
  password String
  profile  Profile? // ไม่ต้องใช้ @relation ที่นี่แล้ว
  profileId Int?   // ฟิลด์ที่เชื่อมโยงกับ Profile

  @@unique([username, email, phone])
}

model Profile {
  id                Int    @id @default(autoincrement())
  userId            Int    @unique // userId เป็น unique
  user              User   @relation(fields: [userId], references: [id]) // เชื่อมโยงกับ User
  firstName         String
  lastName          String
  photoIDcard       String
  relationship      String
  phoneRelationship String
  phoneNumber       String
  email             String
  contactInfo       String
  title             String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model UserSell {
  id        Int          @id @default(autoincrement())
  username  String       @unique
  email     String       @unique
  phone     String       @unique
  password  String
  profile   ProfileSell?
  sellers   Seller[]     // One-to-Many กับ Seller

  @@unique([username, email, phone])
}

model ProfileSell {
  id            Int      @id @default(autoincrement())
  userId        Int      @unique
  title         String?  @default("")
  firstName     String
  lastName      String
  username      String?  @default("")
  phoneNumber   String?  @default("")
  email         String?  @default("")
  address       String
  bank          String?  @default("")
  accountNumber String?  @default("")
  profileImage  String?  @default("")
  photoIdCard   String
  status        String   @default("pending")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  userSell      UserSell @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Seller {
  id               Int      @id @default(autoincrement())
  userId           Int
  title            String?
  firstName        String
  lastName         String
  phoneNumber      String   @unique
  email            String   @unique
  bank             String
  accountNumber    String
  nameroom         String
  addressDormitory String
  distance         String
  photoMain        String   @default("")

  userSell         UserSell @relation(fields: [userId], references: [id], onDelete: Cascade)
  rooms            Room[]   // One-to-Many เชื่อมกับ Room
}

model Room {
  id                  Int     @id @default(autoincrement())
  sellerId            Int
  roomNumber          String
  roomType            String
  roomDetail          String
  amenities           String
  deposit             Float
  electricityCost     Float
  waterCost           Float
  roomPrice           Float
  anotherCost         Float
  photoDormitory      String

  seller              Seller  @relation(fields: [sellerId], references: [id], onDelete: Cascade)
}
